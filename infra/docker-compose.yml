version: '3.3'
services:
  db:
    container_name: 'foodgram-db'
    image: postgres:16
    ports:
      - '6432:5432'
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_USER_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - foodgram-network
    volumes:
      - pg-foodgram-data:/var/lib/postgresql/data
    env_file:
      - ../backend/.env

  backend:
    container_name: 'foodgram-backend'
    build:
      context: ../backend/
      dockerfile: Dockerfile
#    ports:
#      - '8000:8000'
    depends_on:
      - db
    networks:
      - foodgram-network
    volumes:
      - media_value:/backend/src/media
      - static_value:/backend/src/logs/logs_history
    env_file:
      - ../backend/.env

  frontend:
    container_name: 'foodgram_frontend'
    build:
      context: ../frontend
      dockerfile: Dockerfile
    volumes:
      - ../frontend/:/app/result_build/
    depends_on:
      - backend
    networks:
      - foodgram-network

  nginx:
    container_name: 'foodgram-nginx'
    image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - media_value:/backend/src/media
    depends_on:
      - backend
      - frontend
    networks:
      - foodgram-network

volumes:
  pg-foodgram-data:
  media_value:
  static_value:
networks:
  foodgram-network:
    external: True
