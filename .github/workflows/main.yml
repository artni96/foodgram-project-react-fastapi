name: CI

on:
  push:
    branches: [ main ]
    pull_request: [ main ]

jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.11.0
#      - name: Install dependencies
#        run: |
#          cd backend
#          pip install poetry
#          poetry config virtualenvs.create false
#          poetry install --no-interaction --no-ansi
#
#      - name: Ruff linter check
#        run: |
#          ruff check
#          ruff format
  container-job:
    runs-on: ubuntu-latest
    container: node:20-bookworm-slim
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.0
      - name: Install dependencies
        run: |
          cd backend
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-interaction --no-ansi

      - name: Ruff linter check
        run: |
          ruff check
          ruff format

      - name: running pytest
        run: |
          cd backend
          pytest

#      - name: running pytest
#        env:
#          MODE: TEST
#          DB_NAME: foodgram-test
#          DB_USER: postgres
#          DB_USER_PASSWORD: postgres
#          DB_HOST: 127.0.0.1
#          DB_PORT: 5432
#          SECRET_KEY: dfdsfd
#          REDIS_HOST: 127.0.0.1
#          REDIS_PORT: 6379
#          ACCESS_TOKEN_EXPIRE_MINUTES: 3600
#          ALGORITHM: HS256
#        run: |
#          cd infra
#          docker compose -f docker-compose-tests.yaml up -d --build
##          cd ../backend
##          pytest